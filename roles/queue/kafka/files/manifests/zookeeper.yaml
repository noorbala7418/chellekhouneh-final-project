apiVersion: v1
kind: Service
metadata:
  name: zookeeper-svc
  namespace: kafka-ns
  labels:
    app: zk-1
spec:
  type: ClusterIP
  ports:
    - name: client
      port: 2181
      protocol: TCP
    - name: follower
      port: 2888
      protocol: TCP
    - name: leader
      port: 3888
      protocol: TCP
    - name: exporter
      port: 7000
      protocol: TCP
  selector:
    app: zk-pod-1

---

apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: zookeeper-data-pvc
  namespace: kafka-ns
spec:
  accessModes:
    - ReadWriteOnce
  storageClassName: longhorn
  resources:
    requests:
      storage: 1Gi

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: zookeeper-deployment
  namespace: kafka-ns

spec:
  replicas: 1
  selector:
    matchLabels:
      app: zk-pod-1

  template:
    metadata:
      namespace: kafka-ns
      labels:
        app: zk-pod-1

    spec:
      containers:
      - name: zk1
        image: "dockerhub.ir/bitnami/zookeeper:3.7.0"
        imagePullPolicy: IfNotPresent

        resources:
          limits:
            cpu: "300m"
            memory: "500Mi"

        ports:
          - containerPort: 2181
          - containerPort: 2888
          - containerPort: 3888
          - containerPort: 7000

        env:
          - name: ALLOW_ANONYMOUS_LOGIN
            value: "yes"
          - name: ZOO_SERVER_ID
            value: "1"
          - name: ZOO_SERVERS
            value: 0.0.0.0:2888:3888

        volumeMounts:
          - mountPath: /bitnami/zookeeper
            name: bitnamidockerzookeeper-zookeeper-data

          - mountPath: /opt/bitnami/zookeeper/conf
            name: zoo-config

      volumes:
        - name: bitnamidockerzookeeper-zookeeper-data
          persistentVolumeClaim:
            claimName: zookeeper-data-pvc

        - name: zoo-config
          configMap:
            defaultMode: 0440
            name: zookeeper-config-map
