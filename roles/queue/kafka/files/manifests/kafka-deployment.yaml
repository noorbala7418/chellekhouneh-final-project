apiVersion: v1
kind: Service
metadata:
  name: kafka-service
  namespace: kafka-ns
  labels:
    app: kafka-service
spec:
  type: ClusterIP
  selector:
    app: kafka-pod
    id: "0"
  ports:
    - port: 9092
      targetPort: 9092
      name: kafka-port-plaintext

    - port: 9093
      targetPort: 9093
      name: kafka-port-ssl

    - port: 7000
      targetPort: 7000
      name: kafka-jmx-port

---

apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: kafka-data-pvc
  namespace: kafka-ns
spec:
  accessModes:
    - ReadWriteOnce
  storageClassName: longhorn
  resources:
    requests:
      storage: 1Gi

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: kafka-broker
  namespace: kafka-ns
spec:
  replicas: 1

  selector:
    matchLabels:
        app: kafka-pod
        id: "0"

  template:
    metadata:
      name: kafka-broker-pod
      namespace: kafka-ns
      labels:
        app: kafka-pod
        id: "0"

    spec:
      containers:
      - name: kafka
        image: dockerhub.ir/wurstmeister/kafka:2.13-2.8.1
        imagePullPolicy: IfNotPresent

        ports:
          - containerPort: 9092
          - containerPort: 9093
          - containerPort: 7000
        env:
          - name: HOSTNAME_COMMAND
            value: "ip addr show eth0 | awk '{print $2}' | sed -n 3p | cut -d'/' -f1"

          - name: KAFKA_ZOOKEEPER_CONNECT
            value: "zookeeper-svc:2181"

          - name: KAFKA_CREATE_TOPICS
            value: "input:1:1,output:1:1"

          - name: KAFKA_BROKER_ID
            value: "0"

          - name: KAFKA_LISTENER_SECURITY_PROTOCOL_MAP
            value: INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT

          - name: KAFKA_ADVERTISED_LISTENERS
            value: INSIDE://:9092,OUTSIDE://_{HOSTNAME_COMMAND}:9093

          - name: KAFKA_LISTENERS
            value: INSIDE://:9092,OUTSIDE://:9093

          - name: KAFKA_INTER_BROKER_LISTENER_NAME
            value: INSIDE

          - name: KAFKA_JMX_OPTS
            value: "-Dcom.sun.management.jmxremote -Dcom.sun.management.jmxremote.authenticate=false \
              -Dcom.sun.management.jmxremote.ssl=false -Djava.rmi.server.hostname=127.0.0.1 \
              -Dcom.sun.management.jmxremote.rmi.port=7000"

          - name: JMX_PORT
            value: "7000"

        resources:
          limits:
            cpu: "600m"
            memory: "700Mi"

        volumeMounts:
          - mountPath: /kafka
            name: kafka-data

      volumes:
        - name: kafka-data
          persistentVolumeClaim:
            claimName: kafka-data-pvc