upstream prometheus {
        keepalive 64;
{% for host in groups.kuber_nodes -%}
{% filter indent(width=8) %}
server {{ hostvars[host]['private_ip'].split('/')[0] }}:{{ prometheus_nodeport }};
{% endfilter %}
{% endfor %}
}

upstream grafana {
        keepalive 64;
{% for host in groups.kuber_nodes -%}
{% filter indent(width=8) %}
server {{ hostvars[host]['private_ip'].split('/')[0] }}:{{ grafana_nodeport }};
{% endfilter %}
{% endfor %}
}

# this is required to proxy Grafana Live WebSocket connections.
map $http_upgrade $connection_upgrade {
        default upgrade;
        '' close;
}

server {
        listen  80;
        server_name {{ prometheus_domain }};

        location / {
                auth_basic "ADMIN Login";
                auth_basic_user_file /etc/nginx/conf.d/.htpasswd;
                proxy_set_header Host $host;
                proxy_set_header X-Real-IP $remote_addr;
                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                proxy_pass http://prometheus;
        }
}

server {
        listen  80;
        server_name     {{ grafana_domain }};

        location / {
                proxy_set_header Host $host;
                proxy_pass http://grafana/;
        }

# Proxy Grafana Live WebSocket connections.
#        location /api/live {
#                proxy_http_version 1.1;
#                proxy_set_header Upgrade $http_upgrade;
#                proxy_set_header Connection $connection_upgrade;
#                proxy_set_header Host $http_host;
#                proxy_pass http://grafana/;
#        }
}