# Generated by ansible playbook - gw iptables
*nat
:PREROUTING ACCEPT [0:0]
:INPUT ACCEPT [0:0]
:OUTPUT ACCEPT [0:0]
:POSTROUTING ACCEPT [0:0]
{% if (inventory_hostname in groups.loadbalancers)%}
{% for host in groups.kuber_nodes %}
-A PREROUTING -d {{ hostvars[inventory_hostname].ansible_host }}/32 -p tcp -m tcp --dport {{ hostvars[host]['ssh_forward_port'] }} -j DNAT --to-destination {{ hostvars[host]['private_ip'].split('/')[0] }}:22
{% endfor %}
-A POSTROUTING -d {{ hostvars[inventory_hostname]['private_subnet'] }} -p tcp -j SNAT --to-source {{ hostvars[inventory_hostname]['private_ip'].split('/')[0] }}
-A POSTROUTING -o eth0 -j MASQUERADE
-A POSTROUTING -o eth1 -j MASQUERADE
{% else %}
{% endif %}
COMMIT
# Completed
# Generated by Ansible

*filter
:INPUT ACCEPT [0:0]
:FORWARD ACCEPT [0:0]
:OUTPUT ACCEPT [0:0]
-A INPUT -p icmp -j ACCEPT
-A INPUT -p tcp -m tcp --dport 22 -j ACCEPT
-A INPUT -m state --state ESTABLISHED,RELATED -j ACCEPT
-A INPUT -i lo -j ACCEPT
{% if (inventory_hostname in groups.loadbalancers)%}
{% for host in groups.loadbalancers -%}
{%- for port in hostvars[inventory_hostname]['private_ports']  %}
-A INPUT -s {{ hostvars[inventory_hostname]['private_subnet'] }} -p tcp -m tcp --dport {{ port }}  -j ACCEPT
{% endfor -%}
{% for port in hostvars[inventory_hostname]['public_ports']  %}
-A INPUT -p tcp -m tcp --dport {{ port }} -j ACCEPT
{% endfor %}
{% endfor %}
{% endif %}
-A INPUT -j DROP
-A FORWARD -i eth1 -o eth0 -j ACCEPT
-A FORWARD -i eth0 -o eth1 -m state --state RELATED,ESTABLISHED -j ACCEPT
-A FORWARD -s 192.168.1.0/24 -d 192.168.1.0/24 -i eth1 -o eth1 -j ACCEPT
-A FORWARD -s 192.168.1.0/24 -d 192.168.1.0/24 -i eth1 -o eth1 -m state --state RELATED,ESTABLISHED -j ACCEPT
-A OUTPUT -o lo -j ACCEPT

COMMIT
# Completed
